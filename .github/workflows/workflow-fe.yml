name: Workflow FE
on:
  push:
    branches: 
      - development
      - main
      - staging
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN}}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
jobs:
  build:
    runs-on: ubuntu-latest    
    steps:     
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Build React App
        run: npm install && npm run build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: ./dist
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
            # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 3
        env:
         SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
      - name: Use Quality Gate status
        run: |
          if [[ "${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}" != "PASSED" ]]; then
            echo "Quality gate check failed. Exiting..."
            exit 1
          fi  
  e2e:
    runs-on: ubuntu-latest   
    needs: [build, test]
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: ./dist   
      - name: Pre-deploy app
        run: 
            aws s3 sync ./dist/ s3://${{ secrets.S3_BUCKET_PRE_DEPLOY }} --delete
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install E2E Dependencies
        run: npm ci

      - name: Run Cypress E2E Tests
        run: npm run test:e2e                   
  deploy:
     runs-on: ubuntu-latest 
     needs: [build, test, e2e]
     steps:      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifact
          path: ./dist   
      - name: Deploy app build to S3 bucket
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            aws s3 sync ./dist/ s3://${{ secrets.S3_BUCKET_PROD }} --delete
          elif [ "${{ github.ref }}" == "refs/heads/development" ]; then
            aws s3 sync ./dist/ s3://${{ secrets.S3_BUCKET_DEV }} --delete
          elif [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            aws s3 sync ./dist/ s3://${{ secrets.S3_BUCKET_STG }} --delete
          else
            echo "Invalid branch for deployment"
            exit 1
          fi
